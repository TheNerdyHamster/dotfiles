#+TITLE: The Nerdy Hamster Dotfiles
#+AUTHOR: The Nerdy Hamster
#+PROPERTY: header-args :mkdirp yes

* Table of Contents
:PROPERTIES:
:TOC:      :include all :depth 2
:END:

:CONTENTS:
- [[#table-of-contents][Table of Contents]]
- [[#information][Information]]
- [[#general][General]]
  - [[#zshrc][zshrc]]
- [[#desktop][Desktop]]
  - [[#bspwm][BSPWM]]
  - [[#polybar][Polybar]]
  - [[#dunst][Dunst]]
:END:

* Information
When you generate the config file, the exectuable permission is remove from the files.
Please run 
#+begin_src shell
chmod +x .config/bspwm/bspwmrc .config/polybar/launch.sh .config/polybar/scripts/spotify.sh .config/sxhkd/sxhkdrc .config/dunst/dunstrc .zshrc
#+end_src
To achive that.
* General
** zshrc
#+begin_src shell :tangle ~/.zshrc :noweb yes
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/home/lilahamstern/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

export PATH="$PATH:$HOME/go/bin"

export KUBECONFIG=:/home/lilahamstern/.kube/config:/home/lilahamstern/.kube/configs/kubeconfig.yaml

# Autocompletion for dotnet-cli
_dotnet_zsh_complete()
{
  local completions=("$(dotnet complete "$words")")

  reply=( "${(ps:\n:)completions}" )
}

compctl -K _dotnet_zsh_complete dotnet
#+end_src
* Desktop
** BSPWM
#+begin_src shell :tangle ~/.config/bspwm/bspwmrc :noweb yes :mkdirp yes :shebang #!/bin/sh
#! /bin/sh

pgrep -x dunst > /dev/null || dunst &
pgrep -x sxhkd > /dev/null || sxhkd &

autorandr -c
$HOME/.config/polybar/launch.sh

xsetroot -cursor_name left_ptr
nitrogen --restore &
picom -f &

bspc monitor -d I II III IV V VI

bspc config border_width         0
bspc config window_gap           0

bspc config split_ratio          0.52
bspc config borderless_monocle   true
bspc config gapless_monocle      true

bspc rule -a Gimp desktop='^8' state=floating follow=on
bspc rule -a Chromium desktop='^2'
bspc rule -a Spotify desktop='^5'
bspc rule -a mplayer2 state=floating
bspc rule -a Emacs state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off
#+end_src
*** sxhkd
#+begin_src shell :tangle ~/.config/sxhkd/sxhkdrc :noweb yes :mkdirp yes :shebang #!/bin/sh
# terminal emulator
super + Return
	kitty

# program launcher
super + @space
	rofi -show run

# Emacs launcher
super + e
  emacs

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

super + x
  betterlockscreen -l dimblur
#+end_src
** Polybar
*** Startscript
#+begin_src shell :tangle ~/.config/polybar/launch.sh :noweb yes :shebang #!/bin/sh
#!/bin/bash

# Kill all polybar instaces
killall -q polybar

# Wait until polybar has been shutdown
while pgrep -u $UID -x polybar >/dev/null; do sleep 1; done

polybar panel 2> $HOME/.config/polybar/log.txt &
echo "Polybar got launcher"
#+end_src
*** Layout
#+begin_src conf :tangle ~/.config/polybar/config :noweb yes :shebang #!/bin/sh
[settings]
screenchange-reload = true

[globa/wm]
margin-top 0
margin-bottom 0

[colors]
background = #323232
background-alt = #4A4A4A
foreground = #F4F4F4
foreground-alt = #000
primary = #ffb52a
secondary = #e60053
alert = #bd2c40
underline-1 = #2FAFFF
light-purple = #AA95EE
light-pink = #ED89DE
light-blue = #2FAFFF
light-green = #00B4B1 

[bar/panel]
width = 100%
height = 24
offset-x = 0
offset-y = 0
fixed-center = true
enable-ipc = true

background = ${colors.background}
foreground = ${colors.foreground}

line-size = 2
line-color = #f00

border-size = 0
border-color = #000000

padding-top = 5
padding-left = 1
padding-right = 1

module-margin = 1

font-0 = "Cantarell:size=10:weight=bold;2"
font-1 = "Font Awesome:size=10;2"
font-2 = "Material Icons:size=12;5"
font-3 = "Fira Mono:size=8;-3"

modules-left = bspwm
modules-center = spotify
modules-right = xkeyboard memory cpu battery temperature date 

tray-position = right
tray-padding = 2

cursor-click = pointer
cursor-scroll = ns-resize

[module/xkeyboard]
type = internal/xkeyboard
blacklist-0 = num lock

format-prefix-font = 1
format-prefix-foreground = ${colors.foreground-alt}
;format-prefix-underline = ${colors.underline-1}

label-layout =  %layout%
;label-layout-underline = ${colors.underline-1}

label-indicator-padding = 2
label-indicator-margin = 1
;label-indicator-underline = ${colors.underline-1}

[module/bspwm]
type = internal/bspwm

label-focused = %icon%
label-focused-foreground = ${colors.light-green}
;label-focused-underline= ${colors.underline-1}
label-focused-padding = 2

label-occupied = %icon%
label-occupied-foreground = ${colors.light-pink}
label-occupied-padding = 2

label-urgent = %icon%
label-urgent-background = ${colors.alert}
label-urgent-padding = 2

label-empty = %icon%
;label-empty-foreground = ${colors.background-alt}
label-empty-padding = 2

; Separator in between workspaces
;label-separator = 

; ws-icon-0 = I; 
; ws-icon-1 = II; 
; ws-icon-2 = III;   
; ws-icon-3 = IV; 
; ws-icon-4 = V; 
; ws-icon-5 = VI;   

ws-icon-default = 

[module/spotify]
type = custom/script
exec = ~/.config/polybar/scripts/spotify.sh
interval = 3

[module/cpu]
type = internal/cpu
interval = 2
format = <label> <ramp-coreload>
format-underline = ${colors.underline-1}
; click-left = emacsclient -e "(proced)"
label = %percentage:2%%
; ramp-coreload-spacing = 0
; ramp-coreload-0 = ▁
; ramp-coreload-0-foreground = ${colors.foreground-alt}
; ramp-coreload-1 = ▂
; ramp-coreload-2 = ▃
; ramp-coreload-3 = ▄
; ramp-coreload-4 = ▅
; ramp-coreload-5 = ▆
; ramp-coreload-6 = ▇

[module/memory]
type = internal/memory
interval = 2
;format-underline = ${colors.underline-1}
label = %percentage_used%%

[module/date]
type = internal/date
interval = 1

time = %l:%M %p
time-alt = %H:%M

format-prefix-foreground = ${colors.foreground-alt}
;format-underline = ${colors.underline-1}

label =   %time%

[module/battery]
type = internal/battery
battery = BAT0
adapter = ADP1
full-at = 98

label-charging = %percentage%%
format-charging = <animation-charging> <label-charging>
;format-charging-underline = ${colors.underline-1}

label-discharging = %percentage%%
format-discharging = <ramp-capacity> <label-discharging>
;format-discharging-underline = ${self.format-charging-underline}

format-full = <ramp-capacity> <label-full>
format-full-foreground = ${colors.light-green}
;format-full-underline = ${colors.light-green}

ramp-capacity-0 = 
ramp-capacity-1 = 
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 

animation-charging-0 = 
animation-charging-1 = 
animation-charging-2 = 
animation-charging-3 = 
animation-charging-4 = 
animation-charging-framerate = 750

[module/temperature]
type = internal/temperature
thermal-zone = 0
warn-temperature = 60

format = <label>
;format-underline = ${colors.underline-1}
format-warn = <label-warn>
;format-warn-underline = ${self.format-underline}

label = %temperature-c%
label-warn = %temperature-c%!
label-warn-foreground = ${colors.secondary}
#+end_src
*** Scripts
#+begin_src shell :tangle ~/.config/polybar/scripts/spotify.sh :noweb yes :mkdirp yes :shebang #!/bin/sh
#!/bin/sh
status="$(playerctl -p spotify status 2>&1)"
if [ "$status" != "No players found" ]
then
  artist="$(playerctl -p spotify metadata artist)"
  if [ "$artist" != "" ]
  then
    echo "  $(playerctl -p spotify metadata artist) - $(playerctl -p spotify metadata title)"
  else
    # Clear any string that was previously displayed
    echo ""
  fi
else
  # Clear any string that was previously displayed
  echo ""
fi
#+end_src
** Dunst
#+begin_src shell :tangle ~/.config/dunst/dunstrc :noweb yes :mkdirp yes :shebang #!/bin/sh
[global]
    ### Display ###
    monitor = 0

    # The geometry of the window:
    #   [{width}]x{height}[+/-{x}+/-{y}]
    geometry = "500x10-10+50"

    # Show how many messages are currently hidden (because of geometry).
    indicate_hidden = yes

    # Shrink window if it's smaller than the width.  Will be ignored if
    # width is 0.
    shrink = no

    # The transparency of the window.  Range: [0; 100].
    transparency = 10

    # The height of the entire notification.  If the height is smaller
    # than the font height and padding combined, it will be raised
    # to the font height and padding.
    notification_height = 0

    # Draw a line of "separator_height" pixel height between two
    # notifications.
    # Set to 0 to disable.
    separator_height = 1
    separator_color = frame

    # Padding between text and separator.
    padding = 8

    # Horizontal padding.
    horizontal_padding = 8

    # Defines width in pixels of frame around the notification window.
    # Set to 0 to disable.
    frame_width = 2


    # Defines color of the frame around the notification window.
    frame_color = "#89AAEB"

    # Sort messages by urgency.
    sort = yes

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds.
    idle_threshold = 120

    ### Text ###

    font = FiraCode NF 8

    # The spacing between lines.  If the height is smaller than the
    # font height, it will get raised to the font height.
    line_height = 0
    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "<b>%s</b>\n%b"

    # Alignment of message text.
    # Possible values are "left", "center" and "right".
    alignment = left

    # Show age of message if message is older than show_age_threshold
    # seconds.
    # Set to -1 to disable.
    show_age_threshold = 60

    # Split notifications into multiple lines if they don't fit into
    # geometry.
    word_wrap = yes

    # When word_wrap is set to no, specify where to make an ellipsis in long lines.
    # Possible values are "start", "middle" and "end".
    ellipsize = middle

    # Ignore newlines '\n' in notifications.
    ignore_newline = no

    # Stack together notifications with the same content
    stack_duplicates = true

    # Hide the count of stacked notifications with the same content
    hide_duplicate_count = false

    # Display indicators for URLs (U) and actions (A).
    show_indicators = yes

    ### Icons ###

    # Align icons left/right/off
    icon_position = left

    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = 64

    # Paths to default icons.

    ### History ###

    # Should a notification popped up from history be sticky or timeout
    # as if it would normally do.
    sticky_history = no

    # Maximum amount of notifications kept in history
    history_length = 20

    ### Misc/Advanced ###

    # Browser for opening urls in context menu.
    browser = vimb

    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = true

    # Define the title of the windows spawned by dunst
    title = Dunst

    # Define the class of the windows spawned by dunst
    class = Dunst

    startup_notification = false
    verbosity = mesg

    # Define the corner radius of the notification window
    # in pixel size. If the radius is 0, you have no rounded
    # corners.
    # The radius will be automatically lowered if it exceeds half of the
    # notification height to avoid clipping text and/or icons.
    corner_radius = 4

    mouse_left_click = close_current
    mouse_middle_click = do_action
    mouse_right_click = close_all

# Experimental features that may or may not work correctly. Do not expect them
# to have a consistent behaviour across releases.
[experimental]
    # Calculate the dpi to use on a per-monitor basis.
    # If this setting is enabled the Xft.dpi value will be ignored and instead
    # dunst will attempt to calculate an appropriate dpi value for each monitor
    # using the resolution and physical size. This might be useful in setups
    # where there are multiple screens with very different dpi values.
    per_monitor_dpi = false

[shortcuts]

    # Shortcuts are specified as [modifier+][modifier+]...key
    # Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
    # "mod3" and "mod4" (windows-key).
    # Xev might be helpful to find names for keys.

    # Close notification.
    #close = ctrl+space

    # Close all notifications.
    #close_all = ctrl+shift+space

    # Redisplay last message(s).
    # On the US keyboard layout "grave" is normally above TAB and left
    # of "1". Make sure this key actually exists on your keyboard layout,
    # e.g. check output of 'xmodmap -pke'
    history = ctrl+grave

    # Context menu.
    context = ctrl+shift+period

[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    # Otherwise the "#" and following would be interpreted as a comment.
    background = "#222222"
    foreground = "#888888"
    timeout = 10
    # Icon for notifications with low urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_normal]
    background = "#1c1f26"
    foreground = "#ffffff"
    timeout = 10
    # Icon for notifications with normal urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_critical]
    background = "#900000"
    foreground = "#ffffff"
    frame_color = "#ff0000"
    timeout = 0
    # Icon for notifications with critical urgency, uncomment to enable
    #icon = /path/to/icon
#+end_src
